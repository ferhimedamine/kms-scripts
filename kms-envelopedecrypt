#!/bin/bash -e

hash aws &>/dev/null || {
  (>&2 echo 'Error: AWS CLI not found on PATH');
  exit 1;
}

function usage {
  echo 'Usage:' $(basename "$0") '<encrypted-key> <secret>'
  echo '   or: echo <secret> |' $(basename "$0") '<encrypted-key>'
}

encrypted_key_base64=$1
final_base64=$2

[ "$encrypted_key_base64" == "" ] && {
  (>&2 echo 'Error: Missing Encrypted Key');
  echo;
  usage;
  exit 1;
}

# if no <secret> is passed as an argument, try getting it from stdin if we're
# not interactive
[ "$final_base64" == "" ] && [ ! -t 0 ] && {
  final_base64=$(cat -);
}

[ "$final_base64" == "" ] && {
  (>&2 echo 'Error: Missing Secret');
  echo;
  usage;
  exit 1;
}

key_base64=$(aws kms decrypt --ciphertext-blob fileb://<(echo -n "$encrypted_key_base64" | base64 --decode) --query Plaintext --output text)
# key_base64=$($(dirname -- "$0")/kms-decrypt "$encrypted_key_base64")
key=$(echo -n "$key_base64" | base64 --decode)
key_hex=$(echo -n "$key" | xxd -p | tr -d '\n')

final=$(echo -n "$final_base64" | base64 --decode)
final_hex=$(echo -n "$final" | xxd -p | tr -d '\n')

iv=$(echo -n "$final" | head -c16)
iv_base64=$(echo -n "$iv" | base64)
iv_hex=$(echo -n "$iv" | xxd -p | tr -d '\n')

encrypted_value=$(echo -n "$final" | tail -c+17)
encrypted_value_base64=$(echo -n "$encrypted_value" | base64)
encrypted_value_hex=$(echo -n "$encrypted_value" | xxd -p | tr -d '\n')

[ "$DEBUG" == "true" ] && {
  (>&2 echo 'key:');
  (>&2 echo base64: "$key_base64");
  (>&2 echo hex: "$key_hex");
  (>&2 echo);

  (>&2 echo 'final:');
  (>&2 echo bin: "$final");
  (>&2 echo base64: "$final_base64");
  (>&2 echo hex: "$final_hex");
  (>&2 echo);

  (>&2 echo 'iv:');
  (>&2 echo bin: "$iv");
  (>&2 echo base64: "$iv_base64");
  (>&2 echo hex: "$iv_hex");
  (>&2 echo);

  (>&2 echo 'encrypted_value:');
  (>&2 echo bin: "$encrypted_value");
  (>&2 echo base64: "$encrypted_value_base64");
  (>&2 echo hex: "$encrypted_value_hex");
  (>&2 echo);
}

echo -n "$encrypted_value" | openssl enc -aes-256-cbc -d -iv "$iv_hex" -K "$key_hex"
